q()
plt <- ggplot(mpg,aes(y=hwy)) #import dataset into ggplot2
install.packages("shiny")
install.packages("learnr")
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy)) #import dataset into ggplot2
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot and rotate x-axis labels 45 degrees
mpg_summary <- subset(mpg,manufacturer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
mpg_summary <- subset(mpg,manufacturer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") #plot bar plot with labels
?ggplot()
head(mpg)
plt <- ggplot(mpg,aes(x=class)) #import dataset into ggplot2
plt <- ggplot(mpg,aes(x=class)) #import dataset into ggplot2
library(tidyverse)
?mutate()
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE) #add columns to original data frame
demo <- read.csv("C:/Users/ramak/OneDrive/Desktop/R_Analysis/01_Demo/demo.csv")
View(demo)
demo <- read.csv("C:/Users/ramak/OneDrive/Desktop/R_Analysis/01_Demo/demo.csv")
`demo.(1)` <- read.csv("C:/Users/ramak/OneDrive/Desktop/R_Analysis/01_Demo/demo (1).json", header=FALSE)
View(`demo.(1)`)
demo <- read.csv("C:/Users/ramak/OneDrive/Desktop/R_Analysis/01_Demo/demo.json", header=FALSE)
View(demo)
demo2 <- read.csv("C:/Users/ramak/OneDrive/Desktop/R_Analysis/01_Demo/demo2.csv")
View(demo2)
demo <- read.csv("C:/Users/ramak/OneDrive/Desktop/R_Analysis/01_Demo/demo.json", header=FALSE)
View(demo)
demo <- read.csv("C:/Users/ramak/OneDrive/Desktop/R_Analysis/01_Demo/demo.csv")
View(demo)
demo2 <- read.csv("C:/Users/ramak/OneDrive/Desktop/R_Analysis/01_Demo/demo2.csv")
View(demo2)
Vehicle_Data <- read.csv("C:/Users/ramak/OneDrive/Desktop/R_Analysis/01_Demo/Vehicle_Data.xlsx", sep="")
View(Vehicle_Data)
demo_table2 <- fromJSON(txt='demo.json')
?fromJSON()
library(ggplot2)
?fromJSON()
?fromJSON()
View(demo)
View(`demo.(1)`)
View(demo2)
demo_table2 <- fromJSON(txt='demo.json')
demo <- read.csv("C:/Users/ramak/OneDrive/Desktop/R_Analysis/01_Demo/demo.csv")
View(demo)
demo <- read.csv("C:/Users/ramak/OneDrive/Desktop/R_Analysis/01_Demo/demo.csv")
View(demo)
demo_table2 <- fromJSON(txt='demo.json')
View(demo2)
demo_table2 <- fromJSON(txt='demo.json')
demo_table2 <- fromJSON(txt='demo.json')
demo.json <- read.csv("C:/Users/ramak/OneDrive/Desktop/R_Analysis/01_Demo/demo.json", header=FALSE)
View(demo.json)
demo_table2 <- fromJSON(txt='demo.json')
demo.csv <- read.csv("C:/Users/ramak/OneDrive/Desktop/R_Analysis/01_Demo/demo.csv")
View(demo.csv)
demo.2csv <- read.csv("C:/Users/ramak/OneDrive/Desktop/R_Analysis/01_Demo/demo2.csv")
View(demo.2csv)
Vehicle_Data <- read.csv("C:/Users/ramak/OneDrive/Desktop/R_Analysis/01_Demo/Vehicle_Data.xlsx", sep="")
View(Vehicle_Data)
demo_table2
View(demo.json)
View(demo.csv)
View(demo.2csv)
View(`demo.(1)`)
View(demo)
View(demo2)
View(`demo.(1)`)
View(demo.2csv)
View(demo.csv)
View(demo.json)
View(demo2)
Vehicle_Data.xlxs <- read.csv("C:/Users/ramak/OneDrive/Desktop/R_Analysis/01_Demo/Vehicle_Data.xlsx", sep="")
View(Vehicle_Data.xlxs)
demo_table2 <- fromJSON(txt='demo.json')
library(jsonlite)
demo_table2 <- fromJSON(txt='demo.json')
demo_table2 <- fromJSON(txt='demo.json')
install.packages()
?fromJSON()
demo_table2 <- fromJSON(txt='demo.json')
View(demo.json)
?read.csv()
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
View(demo.csv)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
View(demo)
View(`demo.(1)`)
View(demo.2csv)
View(demo.csv)
View(demo.json)
View(`demo.(1)`)
View(demo.json)
View(demo)
demo_table[3,"Year"]
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
?read.csv()
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
view(demo.csv)
View(demo.csv)
?read.csv()
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
View(demo.json)
`demo.(1)` <- read.csv("C:/Users/ramak/OneDrive/Desktop/R_Analysis/01_Demo/demo (1).json", header=FALSE)
View(`demo.(1)`)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
load("~/15-1 Activities/01_Ins_RBasics/Solved/.RData")
view(students)
students
students
library(readr)
students <- read_csv("15-1 Activities/06_Evr_Tibble/Resources/students.csv")
View(students)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
students <-read_csv("students.csv")
students <-read_csv("Resources/students.csv")
students <-read_csv("Resources/students.csv")
students <-read_csv("Resources/students.csv")
head(students)
# unique(dataset, variable) displays unique elements from that column
unique(students,school_name)
# unique(dataset, variable) displays unique elements from that column
unique(students, school_name)
# unique(dataset, variable) displays unique elements from that column
unique(students, 5)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
---
title: "tibbles"
output: html_document: default
---
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
data(diamonds, package='ggplot2')
nrow(diamonds)
# unique(dataset, variable) displays unique elements from that column
unique(students, 5,incomparables = FALSE)
# Use length() to identify the number of schools
count(students,1)
# Use length() to identify the number of schools
length(students,5)
# Use length() to identify the number of schools
length(5)
# nrow() returns the number of rows
nrow()
# unique(dataset, variable) displays unique elements from that column
unique(students$incomparables = FALSE)
# unique(dataset, variable) displays unique elements from that column
unique(students$5incomparables = FALSE)
# Use length() to identify the number of schools
length(school_count)
library(tidyverse)
?mutate()
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE) #add columns to original data frame
View(demo_table)
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), .groups = 'keep') #create summary table
demo_table[3,"year"]
demo_table[3,"3"]
View(demo_table)
demo_table$"Vehicle_Class"
demo_table$"vehicle_Class"[2]
demo_table$"Vehicle_Class"[2]
filter_table<-demo_table2[demo_table2$price>10000,]
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
demo_table2 <- fromJSON(txt='demo.json')
View(demo_table2)
filter_table <- demo_table2[demo_table2$price > 10000,]
View(filter_table)
?subset()
filter_table2 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status) #filter by price and drivetrain
View(filter_table2)
filter_table3 <- demo_table2[("clean" %in% demo_table2$title_status) & (demo_table2$price > 10000) & (demo_table2$drive == "4wd"),]
?sample()
mecha_data <- read.csv("MechaCar_mpg.csv",stringsAsFactors = F,check.names = F)
mecha_data <- read.csv("MechaCar_mpg.csv",stringsAsFactors = F,check.names = F)
View(mecha_data)
lm(qsec ~ vehicle_length,vehicle-weight,spoiler_angle,ground_clearance,AWD,mpg, data=mecha_data) #create linear model
summary(lm(qsec ~ vehicle_length,vehicle-weight,spoiler_angle,ground_clearance,AWD,mpg, data=mecha_data))
lm(qsec ~ vehicle_length,vehicle-weight,spoiler_angle,ground_clearance,AWD,mpg, data=mecha_data) #create linear model
lm(mpg ~ vehicle_length+vehicle_weight+spoiler_angle+ground_clearance+AWD, data=mecha_data)
summary(lm(mpg ~ vehicle_length+vehicle_weight+spoiler_angle+ground_clearance+AWD, data=mecha_data) )
summary(lm(mpg ~ vehicle_length+vehicle_weight+spoiler_angle+ground_clearance+AWD, data=mecha_data) )
summary(lm(mpg ~ vehicle_length+vehicle_weight+spoiler_angle+ground_clearance+AWD, data=mecha_data))
lm(mpg ~ vehicle_length+vehicle_weight+spoiler_angle+ground_clearance+AWD, data=mecha_data)
summarylm(mpg ~ vehicle_length+vehicle_weight+spoiler_angle+ground_clearance+AWD, data=mecha_data))
lm(mpg ~ vehicle_length+vehicle_weight+spoiler_angle+ground_clearance+AWD, data=mecha_data)
summary(lm(mpg ~ vehicle_length+vehicle_weight+spoiler_angle+ground_clearance+AWD, data=mecha_data))
setwd("C:/Users/ramak/OneDrive/Desktop/R_Analysis")
setwd("C:/Users/ramak/OneDrive/Desktop/R_Analysis/MechaCar_Statistical_Analysis/01_Demo")
setwd("C:/Users/ramak/OneDrive/Desktop/R_Analysis/MechaCar_Statistical_Analysis/01_Demo")
library(dtplyr)
library(tidyverse)
mecha_data <- read.csv("MechaCar_mpg.csv",stringsAsFactors = F,check.names = F)
lm(mpg ~ vehicle_length+vehicle_weight+spoiler_angle+ground_clearance+AWD, data=mecha_data)
summary(lm(mpg ~
library(dtplyr)
library(tidyverse)
mecha_data <- read.csv("MechaCar_mpg.csv",stringsAsFactors = F,check.names = F)
lm(mpg ~ vehicle_length+vehicle_weight+spoiler_angle+ground_clearance+AWD, data=mecha_data)
summary(lm(mpg ~ vehicle_length+vehicle_weight+spoiler_angle+ground_clearance+AWD, data=mecha_data))
mecha_data <- read.csv("MechaCar_mpg.csv",stringsAsFactors = F,check.names = F)
mecha_data <- read.csv("MechaCar_mpg.csv",stringsAsFactors = F,check.names = F)
setwd("C:/Users/ramak/OneDrive/Desktop/R_Analysis/MechaCar_Statistical_Analysis/01_Demo")
mecha_data <- read.csv("MechaCar_mpg.csv",stringsAsFactors = F,check.names = F)
